@startuml inputsystem
class AudioManager {
    {static} +Instance
    -audioMixer
    ---
    -playAudio()
    -stopAudioClip()
    -stopAllAudioInGroup()
    -setVolume()
    -getAudioGroupPool()
    --Object Pooling--
    ..Pools..
    -menuAudioPool
    -gameAudioPool
    -musicAudioPool
    ..Pool Sizes..
    -menuAudioPoolSize
    -gameAudioPoolSize
    -musicAudioPoolSize
    ..Audio Prefabs..
    -menuAudioPrefab
    -gameAudioPrefab
    -musicAudioPrefab
}

class AudioPool {
    -audioSources
    -audioPoolSize
    -audioPrefab
    -parentTransform
    -initAudioPool()
    +getAvailableAudioSource()
    +getActiveAudioSource()
    +returnAudioToPool()
    +returnAudioSource()
    +returnAllSources()
    +returnAudioSourceWhenFinished()
}

class AudioController {
    -audioClip
    +playMenuAudioClip()
    +playGameAudioClip()
    +playMusicAudioClip()
    +setMasterVolume()
    +setMusicVolume()
    +setGameFXVolume()
    +setMenuFXVolume()
}

class AudioEventManager {
    ..Events..
    {static} +OnPlayAudio
    {static} +OnSetVolume
    {static} +OnStopAudioClip
    {static} +OnStopAllAudio
    ---
    ..Invokers..
    {static} +playAudio()
    {static} +setVolume()
    {static} +stopAudioClip()
    {static} +stopAllAudioInGroup()
}

entity GameObject

AudioManager       "1..1"    .right.    "1..1"    AudioEventManager    : "Listens >"
AudioManager       "1..1"    .down.     "0..*"    AudioPool            : "Has >"
AudioController    "0..*"    .up.       "1..1"    AudioEventManager    : "Invokes >"
AudioController    "0..1"    -right-    "0..*"    GameObject           : "Has <"

@enduml
