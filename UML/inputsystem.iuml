@startuml inputsystem

class InputManager {
    {static} +Instance
    -PlayerInput
    -playerInputHandler
    -pausedInputHandler
    --
    -enableActionMap()
    -disableActionMap()
}

class InputEvents {
    ..Events..
    {static} +OnEnableActionMap
    {static} +OnDisableActionMap
    --Invokers--
    {static} +EnableActionMap()
    {static} +DisableActionMap()
}

abstract InputHandler {
    #playerInput
}

class PlayerInputHandler {
    +OnPause()
}

class PausedInputHandler {
    +OnResume()
}

class InputMapController {
    +enableActionMap()
    +disableActionMap()
}

class PlayerInputAction
entity GameObject

InputManager        "1..1  "  .up.     "1..1"    InputEvents         : "Listens >"
InputManager        "1..1"    -left-   "0..*"    InputHandler        : "Has >"
InputManager        "1..1"    -down-   "1..1"    PlayerInputAction   : "Has >"

InputHandler        "0..*"    .up.     "1..1  "  InputEvents         : "Invokes >"
InputHandler        "1..1"    .down.   "1..1"    PlayerInputHandler  : "Inherits >"
InputHandler        "1..1   " .down.   "1..1"    PausedInputHandler  : "Inherits >"

InputMapController  "0..*"    .right.  "1..1"    InputEvents         : "Invokes >"
InputMapController  "0..*"    -down-   "0..*"    GameObject          : "Has <"

@enduml
