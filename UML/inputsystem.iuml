@startuml inputsystem
class InputManager {
    {static} +Instance
    +PlayerInput
    --
    -enableActionMap()
    -disableActionMap()
}

abstract InputHandler {
    ..Events..
    {static} +PauseAction
    {static} +ResumeAction
    --Invokers--
    #pause()
    #resume()
}

class PlayerInputHandler {
    +OnPause()
}

class PausedInputHandler {
    +OnResume()
}

class PlayerInputAction {

}

class InputController {
    ..Events..
    {static} +EnableActionMap
    {static} +DisableActionMap
    --Invokers--
    +enableActionMap()
    +disableActionMap()
}

entity GameObject

class GameManager {
    {static} +Instance
    --
    -pauseGame()
    -resumeGame()
    -quitGame()
}

InputManager        "1..1"       .down.   "0..*"       InputController      : "Listens >"
InputController     "0..1"       -down-    "0..*"       GameObject           : "Has <"

InputManager        "1..1"       .left.    "0..1"       InputHandler         : "Listens >"
InputHandler        "1..1   "    -down-    "1..1"       PlayerInputHandler   : "Inherits >"
InputHandler        "1..1"       -down-    "1..1  "     PausedInputHandler   : "Inherits >"

InputManager        "1..1 "      -down-    "1..1"       PlayerInputAction    : "Has >"
PlayerInputHandler  "1..1"       -down-    "1..1    "   PlayerInputAction    : "Listens >"
PausedInputHandler  "1..1"       -down-    "1..1"       PlayerInputAction    : "Listens >"

GameManager         "1..1  "     .right.   "1..1"       InputHandler         : "Listens >"
@enduml
